// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/**
 * =========================
 * Plan de cuentas / Usuarios
 * =========================
 */
model CoaAccount {
  id           Int           @id @default(autoincrement())
  code         String        @unique
  name         String
  nature       String // 'D' o 'C'
  journalLines JournalLine[]
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

/**
 * =========================
 * Terceros + Auditoría
 * =========================
 */
enum PartyType {
  CLIENT
  PROVIDER
  EMPLOYEE
  OTHER
}

model ThirdParty {
  id               Int       @id @default(autoincrement())
  type             PartyType
  document         String?   @unique
  name             String
  email            String?
  phone            String?
  address          String?
  city             String?
  paymentTermsDays Int?
  active           Boolean   @default(true)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  // back-relations
  salesInvoices      SalesInvoice[]
  accountsReceivable AccountsReceivable[]
  journalLines       JournalLine[]
  purchaseInvoices   PurchaseInvoice[]
  accountsPayable    AccountsPayable[]
  cashReceipts       CashReceipt[]
  vendorPayments     VendorPayment[]
  salesCreditNotes   SalesCreditNote[]

  @@index([type])
  @@index([name])
  @@index([active])
}

model AuditLog {
  id       Int      @id @default(autoincrement())
  entity   String
  entityId Int
  action   String // CREATE | UPDATE | DELETE
  userId   Int?
  ts       DateTime @default(now())
  changes  Json?

  @@index([entity, entityId])
  @@index([ts])
}

/**
 * =========================
 * Items + Inventario (FIFO)
 * =========================
 */
enum ItemType {
  PRODUCT
  SERVICE
}

enum StockMoveType {
  PURCHASE
  SALE
  ADJUSTMENT
  TRANSFER_IN
  TRANSFER_OUT
}

model Item {
  id        Int      @id @default(autoincrement())
  sku       String   @unique
  name      String
  type      ItemType
  unit      String   @default("UN")
  price     Decimal?
  ivaPct    Int?
  costAvg   Decimal  @default(0) // no nulo para simplificar cálculos
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // back-relations
  stockMoves           StockMove[]
  layers               StockLayer[]
  salesInvoiceLines    SalesInvoiceLine[]
  purchaseInvoiceLines PurchaseInvoiceLine[]
  salesCreditNoteLines SalesCreditNoteLine[]

  @@index([type])
  @@index([active])
  @@index([name])
}

model Warehouse {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // back-relations
  stockMoves StockMove[]
  layers     StockLayer[]
}

model StockMove {
  id          Int           @id @default(autoincrement())
  itemId      Int
  warehouseId Int
  type        StockMoveType
  qty         Decimal
  unitCost    Decimal
  refType     String?
  refId       Int?
  note        String?
  ts          DateTime      @default(now())

  // relaciones explícitas
  item      Item      @relation(fields: [itemId], references: [id])
  warehouse Warehouse @relation(fields: [warehouseId], references: [id])

  // back-relation a las capas creadas por ESTE movimiento de ENTRADA
  layersCreated StockLayer[] @relation("MoveInLayer")

  @@index([itemId, warehouseId])
  @@index([ts])
  @@index([type])
}

model StockLayer {
  id           Int      @id @default(autoincrement())
  itemId       Int
  warehouseId  Int
  remainingQty Decimal
  unitCost     Decimal
  createdAt    DateTime @default(now())

  // FK opcional al movimiento de ENTRADA que originó la capa
  moveInId Int?
  moveIn   StockMove? @relation("MoveInLayer", fields: [moveInId], references: [id])

  // relaciones a item y bodega
  item      Item      @relation(fields: [itemId], references: [id])
  warehouse Warehouse @relation(fields: [warehouseId], references: [id])

  @@index([itemId, warehouseId])
}

/**
 * =========================
 * Ventas, CxC y Diario
 * =========================
 */
enum PaymentType {
  CASH
  CREDIT
}

enum InvoiceStatus {
  ISSUED
  VOID
}

model SalesInvoice {
  id           Int           @id @default(autoincrement())
  number       Int           @unique
  thirdPartyId Int
  issueDate    DateTime      @default(now())
  dueDate      DateTime?
  paymentType  PaymentType
  status       InvoiceStatus @default(ISSUED)
  subtotal     Decimal       @default(0)
  tax          Decimal       @default(0)
  total        Decimal       @default(0)
  note         String?

  thirdParty         ThirdParty          @relation(fields: [thirdPartyId], references: [id])
  lines              SalesInvoiceLine[]
  ar                 AccountsReceivable?
  receiptAllocations ReceiptAllocation[]
  creditNotes        SalesCreditNote[]

  @@index([thirdPartyId])
  @@index([issueDate])
  @@index([status])
}

model SalesInvoiceLine {
  id           Int     @id @default(autoincrement())
  invoiceId    Int
  itemId       Int
  qty          Decimal
  unitPrice    Decimal
  discountPct  Int?
  vatPct       Int?
  lineSubtotal Decimal
  lineVat      Decimal
  lineTotal    Decimal

  invoice SalesInvoice @relation(fields: [invoiceId], references: [id])
  item    Item         @relation(fields: [itemId], references: [id])

  @@index([invoiceId])
}

model AccountsReceivable {
  id           Int     @id @default(autoincrement())
  thirdPartyId Int
  invoiceId    Int     @unique
  balance      Decimal @default(0)

  thirdParty ThirdParty   @relation(fields: [thirdPartyId], references: [id])
  invoice    SalesInvoice @relation(fields: [invoiceId], references: [id])

  @@index([thirdPartyId])
}

/**
 * =========================
 * Diario contable
 * =========================
 */
model JournalEntry {
  id          Int           @id @default(autoincrement())
  date        DateTime      @default(now())
  sourceType  String
  sourceId    Int
  description String?
  lines       JournalLine[]

  @@index([date])
  @@index([sourceType, sourceId])
}

model JournalLine {
  id           Int     @id @default(autoincrement())
  entryId      Int
  accountId    Int?
  accountCode  String
  thirdPartyId Int?
  debit        Decimal @default(0)
  credit       Decimal @default(0)
  description  String?

  entry      JournalEntry @relation(fields: [entryId], references: [id])
  account    CoaAccount?  @relation(fields: [accountId], references: [id])
  thirdParty ThirdParty?  @relation(fields: [thirdPartyId], references: [id])

  @@index([entryId])
  @@index([accountCode])
}

/**
 * =========================
 * Compras, CxP
 * =========================
 */
enum PurchaseStatus {
  ISSUED
  VOID
}

model PurchaseInvoice {
  id           Int            @id @default(autoincrement())
  number       Int            @unique
  thirdPartyId Int
  issueDate    DateTime       @default(now())
  dueDate      DateTime?
  paymentType  PaymentType
  status       PurchaseStatus @default(ISSUED)
  subtotal     Decimal        @default(0)
  tax          Decimal        @default(0)
  total        Decimal        @default(0)
  note         String?

  thirdParty         ThirdParty            @relation(fields: [thirdPartyId], references: [id])
  lines              PurchaseInvoiceLine[]
  ap                 AccountsPayable?
  paymentAllocations PaymentAllocation[]

  @@index([thirdPartyId])
  @@index([issueDate])
  @@index([status])
}

model PurchaseInvoiceLine {
  id           Int     @id @default(autoincrement())
  invoiceId    Int
  itemId       Int
  qty          Decimal
  unitCost     Decimal
  vatPct       Int?
  lineSubtotal Decimal
  lineVat      Decimal
  lineTotal    Decimal

  invoice PurchaseInvoice @relation(fields: [invoiceId], references: [id])
  item    Item            @relation(fields: [itemId], references: [id])

  @@index([invoiceId])
}

model AccountsPayable {
  id           Int     @id @default(autoincrement())
  thirdPartyId Int
  invoiceId    Int     @unique
  balance      Decimal @default(0)

  thirdParty ThirdParty      @relation(fields: [thirdPartyId], references: [id])
  invoice    PurchaseInvoice @relation(fields: [invoiceId], references: [id])

  @@index([thirdPartyId])
}

/**
 * =========================
 * Tesorería (Cobros / Pagos)
 * =========================
 */
model CashReceipt {
  id           Int      @id @default(autoincrement())
  thirdPartyId Int
  date         DateTime @default(now())
  method       String?
  total        Decimal  @default(0)
  note         String?

  thirdParty  ThirdParty          @relation(fields: [thirdPartyId], references: [id])
  allocations ReceiptAllocation[]

  @@index([thirdPartyId, date])
}

model ReceiptAllocation {
  id        Int     @id @default(autoincrement())
  receiptId Int
  invoiceId Int
  amount    Decimal

  receipt CashReceipt  @relation(fields: [receiptId], references: [id])
  invoice SalesInvoice @relation(fields: [invoiceId], references: [id])

  @@index([invoiceId])
}

model VendorPayment {
  id           Int      @id @default(autoincrement())
  thirdPartyId Int
  date         DateTime @default(now())
  method       String?
  total        Decimal  @default(0)
  note         String?

  thirdParty  ThirdParty          @relation(fields: [thirdPartyId], references: [id])
  allocations PaymentAllocation[]

  @@index([thirdPartyId, date])
}

model PaymentAllocation {
  id        Int     @id @default(autoincrement())
  paymentId Int
  invoiceId Int
  amount    Decimal

  payment VendorPayment   @relation(fields: [paymentId], references: [id])
  invoice PurchaseInvoice @relation(fields: [invoiceId], references: [id])

  @@index([invoiceId])
}

/**
 * =========================
 * Notas Crédito de Ventas
 * =========================
 */
model SalesCreditNote {
  id           Int           @id @default(autoincrement())
  number       Int           @unique
  invoiceId    Int
  thirdPartyId Int
  issueDate    DateTime      @default(now())
  status       InvoiceStatus @default(ISSUED)
  reason       String?
  subtotal     Decimal       @default(0)
  tax          Decimal       @default(0)
  total        Decimal       @default(0)

  invoice    SalesInvoice          @relation(fields: [invoiceId], references: [id])
  thirdParty ThirdParty            @relation(fields: [thirdPartyId], references: [id])
  lines      SalesCreditNoteLine[]

  @@index([invoiceId])
  @@index([thirdPartyId])
  @@index([issueDate])
  @@index([status])
}

model SalesCreditNoteLine {
  id           Int     @id @default(autoincrement())
  creditNoteId Int
  itemId       Int
  qty          Decimal
  unitPrice    Decimal
  vatPct       Int?
  lineSubtotal Decimal
  lineVat      Decimal
  lineTotal    Decimal

  creditNote SalesCreditNote @relation(fields: [creditNoteId], references: [id])
  item       Item            @relation(fields: [itemId], references: [id])

  @@index([creditNoteId])
}
model AccountingPeriod {
  id        Int      @id @default(autoincrement())
  year      Int
  month     Int            // 1..12
  start     DateTime
  end       DateTime
  status    String  @default("OPEN") // OPEN | CLOSED
  closedAt  DateTime?

  @@unique([year, month])
  @@index([status])
}